package ango

import (
	"encoding/json"
	"fmt"
	"os"
)

// LinkedObject should be embedded
type LinkedObject struct {
	provider *Provider
	// reference to the websocket
	connID uint64
	// id for the linked object, generated by client
	id uint64
}

func (lo LinkedObject) getProvider() *Provider {
	return lo.provider
}

func (lo LinkedObject) getConnID() uint64 {
	return lo.connID
}

func (lo LinkedObject) getID() uint64 {
	return lo.id
}

// makes any type embedding LinkedObject implement this interface
type loIface interface {
	getProvider() *Provider
	getConnID() uint64
	getID() uint64
}

func LinkedObjectEater(x interface{}) {
	f, ok := x.(loIface)
	if !ok {
		fmt.Println("not embedding LinkedObject")
		return
	}
	json.NewEncoder(os.Stdout).Encode(x)
	fmt.Println(f.getID())
}
